import React from "react";
import { Provider } from "react-redux";
import store from "./Redux/store";
import Counter from "./Counter";
function App() {
  return (
    <Provider store={store}>
      <Counter />
    </Provider>
  );
}

export default App;


/* -----------------     Counter Component    -------------*/


import React from 'react';
import { useDispatch, useSelector } from 'react-redux';
import './Counter.css';

function Counter() {
  const value = useSelector((state) => state.counter); 
  const dispatch = useDispatch();

  return (
    <div className="di">
      <button className="btn" onClick={() => dispatch({ type: 'increment' })}>
        Increment
      </button>
      <p className="pf">{value.value}</p>
      <button className="btn" onClick={() => dispatch({ type: 'decrement' })}>
        Decrement
      </button>
    </div>
  );
}

export default Counter;

/* -----------------     store    -------------*/



import {createStore } from 'redux'
import rootReducer from './roote';

const store = createStore(rootReducer);

export default store


/* -----------------    rootReduer of redux     -------------*/


import { combineReducers } from "redux";
import appReducer from "./counter";
import { userReducer } from "./userReducer";


const rootReducer=combineReducers({
    counter:appReducer,
    user:userReducer,
})
export default rootReducer


/* -----------------    counter  Reducer  -------------*/


const initialState = {
  value: 0,
};

function appReducer(prevState = initialState, action) {
  switch (action.type) {
    case "increment":
      return {
        ...prevState,
        value: prevState.value + 1,
      };
    case "decrement":
      return {
        ...prevState,
        value: prevState.value - 1,
      };
    default:
      return prevState;
  }
}
export default appReducer
